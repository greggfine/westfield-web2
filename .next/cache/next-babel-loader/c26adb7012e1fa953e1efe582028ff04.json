{"ast":null,"code":"var cloudinary = require('cloudinary').v2;\n\ncloudinary.config({\n  cloud_name: process.env.CLOUDINARY_NAME,\n  api_key: process.env.CLOUDINARY_API_KEY,\n  api_secret: process.env.CLOUDINARY_API_SECRET\n});\nexport default (async (req, res) => {\n  try {\n    const fileStr = req.body.data;\n    const uploadedResponse = await cloudinary.uploader.upload(fileStr, {// upload_preset: \"dev_setups\"\n    });\n    console.log(uploadedResponse);\n    res.json({\n      msg: \"YAYAA\"\n    });\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({\n      err: \"Something Went Wrong\"\n    });\n  }\n\n  res.status(200).json({});\n});","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/westfield-web_b/pages/api/upload.ts"],"names":["cloudinary","require","v2","config","cloud_name","process","env","CLOUDINARY_NAME","api_key","CLOUDINARY_API_KEY","api_secret","CLOUDINARY_API_SECRET","req","res","fileStr","body","data","uploadedResponse","uploader","upload","console","log","json","msg","error","status","err"],"mappings":"AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,EAAvC;;AACAF,UAAU,CAACG,MAAX,CAAkB;AACdC,EAAAA,UAAU,EAAEC,OAAO,CAACC,GAAR,CAAYC,eADV;AAEdC,EAAAA,OAAO,EAAEH,OAAO,CAACC,GAAR,CAAYG,kBAFP;AAGdC,EAAAA,UAAU,EAAEL,OAAO,CAACC,GAAR,CAAYK;AAHV,CAAlB;AAOA,gBAAe,OAAOC,GAAP,EAA4BC,GAA5B,KAAqD;AAChE,MAAI;AACA,UAAMC,OAAO,GAAGF,GAAG,CAACG,IAAJ,CAASC,IAAzB;AACA,UAAMC,gBAAgB,GAAG,MAAMjB,UAAU,CAACkB,QAAX,CAAoBC,MAApB,CAA2BL,OAA3B,EAAoC,CAC/D;AAD+D,KAApC,CAA/B;AAGAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;AACAJ,IAAAA,GAAG,CAACS,IAAJ,CAAS;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAT;AACH,GAPD,CAOE,OAAMC,KAAN,EAAa;AACXJ,IAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACAX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,MAAAA,GAAG,EAAE;AAAN,KAArB;AACH;;AACHb,EAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAArB;AACD,CAbD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\n\nvar cloudinary = require('cloudinary').v2\ncloudinary.config({\n    cloud_name: process.env.CLOUDINARY_NAME,\n    api_key: process.env.CLOUDINARY_API_KEY,\n    api_secret: process.env.CLOUDINARY_API_SECRET\n})\n\n\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\n    try {\n        const fileStr = req.body.data;\n        const uploadedResponse = await cloudinary.uploader.upload(fileStr, {\n            // upload_preset: \"dev_setups\"\n        })\n        console.log(uploadedResponse)\n        res.json({msg: \"YAYAA\"})\n    } catch(error) {\n        console.error(error)\n        res.status(500).json({err: \"Something Went Wrong\"})\n    }\n  res.status(200).json({});\n};\n "]},"metadata":{},"sourceType":"module"}